# Deploying Azure ML Pipeline Endpoint DevOps Pipeline
## Expects two variables defined in a group: AML_WORKSPACE_NAME, AML_RESOURCE_GROUP 
## MODEL_NAME and MODEL_VERSION should be injected / updated at runtime
variables:
- group: AMLDBRVariables
- name: 'SERVICE_CONNECTION'
  value: 'aml-service-connection' # Workspace Service Connection name
- name: DEPLOY_ENV
  value: sparkenv

trigger: none

pool:
  vmImage: 'Ubuntu-16.04'
stages:
- stage: QADeployment
  jobs:
  - job: QADeploy
    steps:
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          echo 'Working with...'
          echo $MODEL_NAME
          echo $MODEL_VERSION
      
    - task: AzureCLI@2
      displayName: 'Install AML CLI'
      inputs:
        azureSubscription: $(SERVICE_CONNECTION)
        scriptLocation: inlineScript
        scriptType: 'bash'
        inlineScript: 'az extension add -n azure-cli-ml'
    
    - task: Bash@3
      displayName: 'Create _models folder'
      inputs:
        targetType: 'inline'
        script: |
          mkdir _models
          mkdir _models/artifacts
          cp ./ml/score/score.py ./_models/score.py

    - task: AzureCLI@2
      displayName: 'Attach folder to workspace'
      inputs:
        azureSubscription: $(SERVICE_CONNECTION)
        workingDirectory: $(System.DefaultWorkingDirectory)/_models
        scriptLocation: inlineScript
        scriptType: 'bash'
        inlineScript: 'az ml folder attach -w $(AML_WORKSPACE_NAME) -g $(AML_RESOURCE_GROUP) -e devops'

    - task: AzureCLI@2
      displayName: 'Get desired model'
      inputs:
        azureSubscription: $(SERVICE_CONNECTION)
        workingDirectory: $(System.DefaultWorkingDirectory)/_models
        scriptLocation: inlineScript
        scriptType: 'bash'
        inlineScript: 'az ml model list --model-name $(MODEL_NAME) --latest -w $(AML_WORKSPACE_NAME) -g $(AML_RESOURCE_GROUP)'
    
    - task: AzureCLI@2
      displayName: 'Download Latest Model Files'
      inputs:
        azureSubscription: $(SERVICE_CONNECTION)
        workingDirectory: $(System.DefaultWorkingDirectory)/_models
        scriptLocation: inlineScript
        scriptType: 'bash'
        inlineScript: 'az ml model download --model-id $(MODEL_NAME):$(MODEL_VERSION) --target-dir $(System.DefaultWorkingDirectory)/_models/artifacts -w $(AML_WORKSPACE_NAME) -g $(AML_RESOURCE_GROUP)'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/_models'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop

    # TODO: Split this into a separate stage
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
        architecture: 'x64'
      
    - task: Bash@3
      displayName: 'Install Azure ML SDK'
      inputs:
        targetType: 'inline'
        script: 'pip install azureml-sdk'
    
    - task: Bash@3
      displayName: 'Replace Model Name with SED'
      inputs:
        targetType: 'inline'
        script: 'sed -i "s/{{MODEL_NAME_TO_BE_REPLACED_BY_SED}}/$MODEL_NAME/g" ml/score/score.py'
    
    
    - task: AzureCLI@2
      displayName: 'Deploy model to ACI for QA'
      inputs:
        azureSubscription: $(SERVICE_CONNECTION)
        workingDirectory: $(System.DefaultWorkingDirectory)
        scriptLocation: inlineScript
        scriptType: 'bash'
        inlineScript: 'python ml/config-templates/deploy-aci.py -e $(DEPLOY_ENV) -i $(MODEL_NAME):$(MODEL_VERSION) -n qa-aci-$(MODEL_NAME) -s ml/score/score.py'
